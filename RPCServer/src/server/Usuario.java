/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package server;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-03")
public class Usuario implements org.apache.thrift.TBase<Usuario, Usuario._Fields>, java.io.Serializable, Cloneable, Comparable<Usuario> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Usuario");

  private static final org.apache.thrift.protocol.TField NOMBRE_FIELD_DESC = new org.apache.thrift.protocol.TField("nombre", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField APELLIDO_FIELD_DESC = new org.apache.thrift.protocol.TField("apellido", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CALLE_FIELD_DESC = new org.apache.thrift.protocol.TField("calle", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ALTURA_FIELD_DESC = new org.apache.thrift.protocol.TField("altura", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField LOCALIDAD_FIELD_DESC = new org.apache.thrift.protocol.TField("localidad", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField FECHA_NACIMIENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("fechaNAcimiento", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField USUARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("usuario", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CLAVE_FIELD_DESC = new org.apache.thrift.protocol.TField("clave", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UsuarioStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UsuarioTupleSchemeFactory();

  public java.lang.String nombre; // required
  public java.lang.String apellido; // required
  public java.lang.String calle; // required
  public int altura; // required
  public int localidad; // required
  public java.lang.String telefono; // required
  public java.lang.String email; // required
  public java.lang.String fechaNAcimiento; // required
  public java.lang.String usuario; // required
  public java.lang.String clave; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NOMBRE((short)1, "nombre"),
    APELLIDO((short)2, "apellido"),
    CALLE((short)3, "calle"),
    ALTURA((short)4, "altura"),
    LOCALIDAD((short)5, "localidad"),
    TELEFONO((short)6, "telefono"),
    EMAIL((short)7, "email"),
    FECHA_NACIMIENTO((short)8, "fechaNAcimiento"),
    USUARIO((short)9, "usuario"),
    CLAVE((short)10, "clave");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NOMBRE
          return NOMBRE;
        case 2: // APELLIDO
          return APELLIDO;
        case 3: // CALLE
          return CALLE;
        case 4: // ALTURA
          return ALTURA;
        case 5: // LOCALIDAD
          return LOCALIDAD;
        case 6: // TELEFONO
          return TELEFONO;
        case 7: // EMAIL
          return EMAIL;
        case 8: // FECHA_NACIMIENTO
          return FECHA_NACIMIENTO;
        case 9: // USUARIO
          return USUARIO;
        case 10: // CLAVE
          return CLAVE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ALTURA_ISSET_ID = 0;
  private static final int __LOCALIDAD_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NOMBRE, new org.apache.thrift.meta_data.FieldMetaData("nombre", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APELLIDO, new org.apache.thrift.meta_data.FieldMetaData("apellido", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CALLE, new org.apache.thrift.meta_data.FieldMetaData("calle", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ALTURA, new org.apache.thrift.meta_data.FieldMetaData("altura", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOCALIDAD, new org.apache.thrift.meta_data.FieldMetaData("localidad", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FECHA_NACIMIENTO, new org.apache.thrift.meta_data.FieldMetaData("fechaNAcimiento", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Date")));
    tmpMap.put(_Fields.USUARIO, new org.apache.thrift.meta_data.FieldMetaData("usuario", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLAVE, new org.apache.thrift.meta_data.FieldMetaData("clave", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Usuario.class, metaDataMap);
  }

  public Usuario() {
  }

  public Usuario(
    java.lang.String nombre,
    java.lang.String apellido,
    java.lang.String calle,
    int altura,
    int localidad,
    java.lang.String telefono,
    java.lang.String email,
    java.lang.String fechaNAcimiento,
    java.lang.String usuario,
    java.lang.String clave)
  {
    this();
    this.nombre = nombre;
    this.apellido = apellido;
    this.calle = calle;
    this.altura = altura;
    setAlturaIsSet(true);
    this.localidad = localidad;
    setLocalidadIsSet(true);
    this.telefono = telefono;
    this.email = email;
    this.fechaNAcimiento = fechaNAcimiento;
    this.usuario = usuario;
    this.clave = clave;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Usuario(Usuario other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetNombre()) {
      this.nombre = other.nombre;
    }
    if (other.isSetApellido()) {
      this.apellido = other.apellido;
    }
    if (other.isSetCalle()) {
      this.calle = other.calle;
    }
    this.altura = other.altura;
    this.localidad = other.localidad;
    if (other.isSetTelefono()) {
      this.telefono = other.telefono;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetFechaNAcimiento()) {
      this.fechaNAcimiento = other.fechaNAcimiento;
    }
    if (other.isSetUsuario()) {
      this.usuario = other.usuario;
    }
    if (other.isSetClave()) {
      this.clave = other.clave;
    }
  }

  public Usuario deepCopy() {
    return new Usuario(this);
  }

  @Override
  public void clear() {
    this.nombre = null;
    this.apellido = null;
    this.calle = null;
    setAlturaIsSet(false);
    this.altura = 0;
    setLocalidadIsSet(false);
    this.localidad = 0;
    this.telefono = null;
    this.email = null;
    this.fechaNAcimiento = null;
    this.usuario = null;
    this.clave = null;
  }

  public java.lang.String getNombre() {
    return this.nombre;
  }

  public Usuario setNombre(java.lang.String nombre) {
    this.nombre = nombre;
    return this;
  }

  public void unsetNombre() {
    this.nombre = null;
  }

  /** Returns true if field nombre is set (has been assigned a value) and false otherwise */
  public boolean isSetNombre() {
    return this.nombre != null;
  }

  public void setNombreIsSet(boolean value) {
    if (!value) {
      this.nombre = null;
    }
  }

  public java.lang.String getApellido() {
    return this.apellido;
  }

  public Usuario setApellido(java.lang.String apellido) {
    this.apellido = apellido;
    return this;
  }

  public void unsetApellido() {
    this.apellido = null;
  }

  /** Returns true if field apellido is set (has been assigned a value) and false otherwise */
  public boolean isSetApellido() {
    return this.apellido != null;
  }

  public void setApellidoIsSet(boolean value) {
    if (!value) {
      this.apellido = null;
    }
  }

  public java.lang.String getCalle() {
    return this.calle;
  }

  public Usuario setCalle(java.lang.String calle) {
    this.calle = calle;
    return this;
  }

  public void unsetCalle() {
    this.calle = null;
  }

  /** Returns true if field calle is set (has been assigned a value) and false otherwise */
  public boolean isSetCalle() {
    return this.calle != null;
  }

  public void setCalleIsSet(boolean value) {
    if (!value) {
      this.calle = null;
    }
  }

  public int getAltura() {
    return this.altura;
  }

  public Usuario setAltura(int altura) {
    this.altura = altura;
    setAlturaIsSet(true);
    return this;
  }

  public void unsetAltura() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ALTURA_ISSET_ID);
  }

  /** Returns true if field altura is set (has been assigned a value) and false otherwise */
  public boolean isSetAltura() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ALTURA_ISSET_ID);
  }

  public void setAlturaIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ALTURA_ISSET_ID, value);
  }

  public int getLocalidad() {
    return this.localidad;
  }

  public Usuario setLocalidad(int localidad) {
    this.localidad = localidad;
    setLocalidadIsSet(true);
    return this;
  }

  public void unsetLocalidad() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LOCALIDAD_ISSET_ID);
  }

  /** Returns true if field localidad is set (has been assigned a value) and false otherwise */
  public boolean isSetLocalidad() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LOCALIDAD_ISSET_ID);
  }

  public void setLocalidadIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LOCALIDAD_ISSET_ID, value);
  }

  public java.lang.String getTelefono() {
    return this.telefono;
  }

  public Usuario setTelefono(java.lang.String telefono) {
    this.telefono = telefono;
    return this;
  }

  public void unsetTelefono() {
    this.telefono = null;
  }

  /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
  public boolean isSetTelefono() {
    return this.telefono != null;
  }

  public void setTelefonoIsSet(boolean value) {
    if (!value) {
      this.telefono = null;
    }
  }

  public java.lang.String getEmail() {
    return this.email;
  }

  public Usuario setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public java.lang.String getFechaNAcimiento() {
    return this.fechaNAcimiento;
  }

  public Usuario setFechaNAcimiento(java.lang.String fechaNAcimiento) {
    this.fechaNAcimiento = fechaNAcimiento;
    return this;
  }

  public void unsetFechaNAcimiento() {
    this.fechaNAcimiento = null;
  }

  /** Returns true if field fechaNAcimiento is set (has been assigned a value) and false otherwise */
  public boolean isSetFechaNAcimiento() {
    return this.fechaNAcimiento != null;
  }

  public void setFechaNAcimientoIsSet(boolean value) {
    if (!value) {
      this.fechaNAcimiento = null;
    }
  }

  public java.lang.String getUsuario() {
    return this.usuario;
  }

  public Usuario setUsuario(java.lang.String usuario) {
    this.usuario = usuario;
    return this;
  }

  public void unsetUsuario() {
    this.usuario = null;
  }

  /** Returns true if field usuario is set (has been assigned a value) and false otherwise */
  public boolean isSetUsuario() {
    return this.usuario != null;
  }

  public void setUsuarioIsSet(boolean value) {
    if (!value) {
      this.usuario = null;
    }
  }

  public java.lang.String getClave() {
    return this.clave;
  }

  public Usuario setClave(java.lang.String clave) {
    this.clave = clave;
    return this;
  }

  public void unsetClave() {
    this.clave = null;
  }

  /** Returns true if field clave is set (has been assigned a value) and false otherwise */
  public boolean isSetClave() {
    return this.clave != null;
  }

  public void setClaveIsSet(boolean value) {
    if (!value) {
      this.clave = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case NOMBRE:
      if (value == null) {
        unsetNombre();
      } else {
        setNombre((java.lang.String)value);
      }
      break;

    case APELLIDO:
      if (value == null) {
        unsetApellido();
      } else {
        setApellido((java.lang.String)value);
      }
      break;

    case CALLE:
      if (value == null) {
        unsetCalle();
      } else {
        setCalle((java.lang.String)value);
      }
      break;

    case ALTURA:
      if (value == null) {
        unsetAltura();
      } else {
        setAltura((java.lang.Integer)value);
      }
      break;

    case LOCALIDAD:
      if (value == null) {
        unsetLocalidad();
      } else {
        setLocalidad((java.lang.Integer)value);
      }
      break;

    case TELEFONO:
      if (value == null) {
        unsetTelefono();
      } else {
        setTelefono((java.lang.String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((java.lang.String)value);
      }
      break;

    case FECHA_NACIMIENTO:
      if (value == null) {
        unsetFechaNAcimiento();
      } else {
        setFechaNAcimiento((java.lang.String)value);
      }
      break;

    case USUARIO:
      if (value == null) {
        unsetUsuario();
      } else {
        setUsuario((java.lang.String)value);
      }
      break;

    case CLAVE:
      if (value == null) {
        unsetClave();
      } else {
        setClave((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case NOMBRE:
      return getNombre();

    case APELLIDO:
      return getApellido();

    case CALLE:
      return getCalle();

    case ALTURA:
      return getAltura();

    case LOCALIDAD:
      return getLocalidad();

    case TELEFONO:
      return getTelefono();

    case EMAIL:
      return getEmail();

    case FECHA_NACIMIENTO:
      return getFechaNAcimiento();

    case USUARIO:
      return getUsuario();

    case CLAVE:
      return getClave();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case NOMBRE:
      return isSetNombre();
    case APELLIDO:
      return isSetApellido();
    case CALLE:
      return isSetCalle();
    case ALTURA:
      return isSetAltura();
    case LOCALIDAD:
      return isSetLocalidad();
    case TELEFONO:
      return isSetTelefono();
    case EMAIL:
      return isSetEmail();
    case FECHA_NACIMIENTO:
      return isSetFechaNAcimiento();
    case USUARIO:
      return isSetUsuario();
    case CLAVE:
      return isSetClave();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Usuario)
      return this.equals((Usuario)that);
    return false;
  }

  public boolean equals(Usuario that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_nombre = true && this.isSetNombre();
    boolean that_present_nombre = true && that.isSetNombre();
    if (this_present_nombre || that_present_nombre) {
      if (!(this_present_nombre && that_present_nombre))
        return false;
      if (!this.nombre.equals(that.nombre))
        return false;
    }

    boolean this_present_apellido = true && this.isSetApellido();
    boolean that_present_apellido = true && that.isSetApellido();
    if (this_present_apellido || that_present_apellido) {
      if (!(this_present_apellido && that_present_apellido))
        return false;
      if (!this.apellido.equals(that.apellido))
        return false;
    }

    boolean this_present_calle = true && this.isSetCalle();
    boolean that_present_calle = true && that.isSetCalle();
    if (this_present_calle || that_present_calle) {
      if (!(this_present_calle && that_present_calle))
        return false;
      if (!this.calle.equals(that.calle))
        return false;
    }

    boolean this_present_altura = true;
    boolean that_present_altura = true;
    if (this_present_altura || that_present_altura) {
      if (!(this_present_altura && that_present_altura))
        return false;
      if (this.altura != that.altura)
        return false;
    }

    boolean this_present_localidad = true;
    boolean that_present_localidad = true;
    if (this_present_localidad || that_present_localidad) {
      if (!(this_present_localidad && that_present_localidad))
        return false;
      if (this.localidad != that.localidad)
        return false;
    }

    boolean this_present_telefono = true && this.isSetTelefono();
    boolean that_present_telefono = true && that.isSetTelefono();
    if (this_present_telefono || that_present_telefono) {
      if (!(this_present_telefono && that_present_telefono))
        return false;
      if (!this.telefono.equals(that.telefono))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_fechaNAcimiento = true && this.isSetFechaNAcimiento();
    boolean that_present_fechaNAcimiento = true && that.isSetFechaNAcimiento();
    if (this_present_fechaNAcimiento || that_present_fechaNAcimiento) {
      if (!(this_present_fechaNAcimiento && that_present_fechaNAcimiento))
        return false;
      if (!this.fechaNAcimiento.equals(that.fechaNAcimiento))
        return false;
    }

    boolean this_present_usuario = true && this.isSetUsuario();
    boolean that_present_usuario = true && that.isSetUsuario();
    if (this_present_usuario || that_present_usuario) {
      if (!(this_present_usuario && that_present_usuario))
        return false;
      if (!this.usuario.equals(that.usuario))
        return false;
    }

    boolean this_present_clave = true && this.isSetClave();
    boolean that_present_clave = true && that.isSetClave();
    if (this_present_clave || that_present_clave) {
      if (!(this_present_clave && that_present_clave))
        return false;
      if (!this.clave.equals(that.clave))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetNombre()) ? 131071 : 524287);
    if (isSetNombre())
      hashCode = hashCode * 8191 + nombre.hashCode();

    hashCode = hashCode * 8191 + ((isSetApellido()) ? 131071 : 524287);
    if (isSetApellido())
      hashCode = hashCode * 8191 + apellido.hashCode();

    hashCode = hashCode * 8191 + ((isSetCalle()) ? 131071 : 524287);
    if (isSetCalle())
      hashCode = hashCode * 8191 + calle.hashCode();

    hashCode = hashCode * 8191 + altura;

    hashCode = hashCode * 8191 + localidad;

    hashCode = hashCode * 8191 + ((isSetTelefono()) ? 131071 : 524287);
    if (isSetTelefono())
      hashCode = hashCode * 8191 + telefono.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmail()) ? 131071 : 524287);
    if (isSetEmail())
      hashCode = hashCode * 8191 + email.hashCode();

    hashCode = hashCode * 8191 + ((isSetFechaNAcimiento()) ? 131071 : 524287);
    if (isSetFechaNAcimiento())
      hashCode = hashCode * 8191 + fechaNAcimiento.hashCode();

    hashCode = hashCode * 8191 + ((isSetUsuario()) ? 131071 : 524287);
    if (isSetUsuario())
      hashCode = hashCode * 8191 + usuario.hashCode();

    hashCode = hashCode * 8191 + ((isSetClave()) ? 131071 : 524287);
    if (isSetClave())
      hashCode = hashCode * 8191 + clave.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Usuario other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetNombre()).compareTo(other.isSetNombre());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNombre()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombre, other.nombre);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApellido()).compareTo(other.isSetApellido());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApellido()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.apellido, other.apellido);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCalle()).compareTo(other.isSetCalle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCalle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.calle, other.calle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAltura()).compareTo(other.isSetAltura());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAltura()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.altura, other.altura);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLocalidad()).compareTo(other.isSetLocalidad());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocalidad()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.localidad, other.localidad);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelefono()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFechaNAcimiento()).compareTo(other.isSetFechaNAcimiento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFechaNAcimiento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fechaNAcimiento, other.fechaNAcimiento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUsuario()).compareTo(other.isSetUsuario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsuario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.usuario, other.usuario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetClave()).compareTo(other.isSetClave());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClave()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clave, other.clave);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Usuario(");
    boolean first = true;

    sb.append("nombre:");
    if (this.nombre == null) {
      sb.append("null");
    } else {
      sb.append(this.nombre);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("apellido:");
    if (this.apellido == null) {
      sb.append("null");
    } else {
      sb.append(this.apellido);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("calle:");
    if (this.calle == null) {
      sb.append("null");
    } else {
      sb.append(this.calle);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("altura:");
    sb.append(this.altura);
    first = false;
    if (!first) sb.append(", ");
    sb.append("localidad:");
    sb.append(this.localidad);
    first = false;
    if (!first) sb.append(", ");
    sb.append("telefono:");
    if (this.telefono == null) {
      sb.append("null");
    } else {
      sb.append(this.telefono);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fechaNAcimiento:");
    if (this.fechaNAcimiento == null) {
      sb.append("null");
    } else {
      sb.append(this.fechaNAcimiento);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("usuario:");
    if (this.usuario == null) {
      sb.append("null");
    } else {
      sb.append(this.usuario);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clave:");
    if (this.clave == null) {
      sb.append("null");
    } else {
      sb.append(this.clave);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UsuarioStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UsuarioStandardScheme getScheme() {
      return new UsuarioStandardScheme();
    }
  }

  private static class UsuarioStandardScheme extends org.apache.thrift.scheme.StandardScheme<Usuario> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Usuario struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NOMBRE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nombre = iprot.readString();
              struct.setNombreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // APELLIDO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.apellido = iprot.readString();
              struct.setApellidoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CALLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.calle = iprot.readString();
              struct.setCalleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ALTURA
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.altura = iprot.readI32();
              struct.setAlturaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LOCALIDAD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.localidad = iprot.readI32();
              struct.setLocalidadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TELEFONO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.telefono = iprot.readString();
              struct.setTelefonoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // FECHA_NACIMIENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fechaNAcimiento = iprot.readString();
              struct.setFechaNAcimientoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // USUARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.usuario = iprot.readString();
              struct.setUsuarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CLAVE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clave = iprot.readString();
              struct.setClaveIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Usuario struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.nombre != null) {
        oprot.writeFieldBegin(NOMBRE_FIELD_DESC);
        oprot.writeString(struct.nombre);
        oprot.writeFieldEnd();
      }
      if (struct.apellido != null) {
        oprot.writeFieldBegin(APELLIDO_FIELD_DESC);
        oprot.writeString(struct.apellido);
        oprot.writeFieldEnd();
      }
      if (struct.calle != null) {
        oprot.writeFieldBegin(CALLE_FIELD_DESC);
        oprot.writeString(struct.calle);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ALTURA_FIELD_DESC);
      oprot.writeI32(struct.altura);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOCALIDAD_FIELD_DESC);
      oprot.writeI32(struct.localidad);
      oprot.writeFieldEnd();
      if (struct.telefono != null) {
        oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
        oprot.writeString(struct.telefono);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      if (struct.fechaNAcimiento != null) {
        oprot.writeFieldBegin(FECHA_NACIMIENTO_FIELD_DESC);
        oprot.writeString(struct.fechaNAcimiento);
        oprot.writeFieldEnd();
      }
      if (struct.usuario != null) {
        oprot.writeFieldBegin(USUARIO_FIELD_DESC);
        oprot.writeString(struct.usuario);
        oprot.writeFieldEnd();
      }
      if (struct.clave != null) {
        oprot.writeFieldBegin(CLAVE_FIELD_DESC);
        oprot.writeString(struct.clave);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UsuarioTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UsuarioTupleScheme getScheme() {
      return new UsuarioTupleScheme();
    }
  }

  private static class UsuarioTupleScheme extends org.apache.thrift.scheme.TupleScheme<Usuario> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Usuario struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetNombre()) {
        optionals.set(0);
      }
      if (struct.isSetApellido()) {
        optionals.set(1);
      }
      if (struct.isSetCalle()) {
        optionals.set(2);
      }
      if (struct.isSetAltura()) {
        optionals.set(3);
      }
      if (struct.isSetLocalidad()) {
        optionals.set(4);
      }
      if (struct.isSetTelefono()) {
        optionals.set(5);
      }
      if (struct.isSetEmail()) {
        optionals.set(6);
      }
      if (struct.isSetFechaNAcimiento()) {
        optionals.set(7);
      }
      if (struct.isSetUsuario()) {
        optionals.set(8);
      }
      if (struct.isSetClave()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetNombre()) {
        oprot.writeString(struct.nombre);
      }
      if (struct.isSetApellido()) {
        oprot.writeString(struct.apellido);
      }
      if (struct.isSetCalle()) {
        oprot.writeString(struct.calle);
      }
      if (struct.isSetAltura()) {
        oprot.writeI32(struct.altura);
      }
      if (struct.isSetLocalidad()) {
        oprot.writeI32(struct.localidad);
      }
      if (struct.isSetTelefono()) {
        oprot.writeString(struct.telefono);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetFechaNAcimiento()) {
        oprot.writeString(struct.fechaNAcimiento);
      }
      if (struct.isSetUsuario()) {
        oprot.writeString(struct.usuario);
      }
      if (struct.isSetClave()) {
        oprot.writeString(struct.clave);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Usuario struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.nombre = iprot.readString();
        struct.setNombreIsSet(true);
      }
      if (incoming.get(1)) {
        struct.apellido = iprot.readString();
        struct.setApellidoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.calle = iprot.readString();
        struct.setCalleIsSet(true);
      }
      if (incoming.get(3)) {
        struct.altura = iprot.readI32();
        struct.setAlturaIsSet(true);
      }
      if (incoming.get(4)) {
        struct.localidad = iprot.readI32();
        struct.setLocalidadIsSet(true);
      }
      if (incoming.get(5)) {
        struct.telefono = iprot.readString();
        struct.setTelefonoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(7)) {
        struct.fechaNAcimiento = iprot.readString();
        struct.setFechaNAcimientoIsSet(true);
      }
      if (incoming.get(8)) {
        struct.usuario = iprot.readString();
        struct.setUsuarioIsSet(true);
      }
      if (incoming.get(9)) {
        struct.clave = iprot.readString();
        struct.setClaveIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

